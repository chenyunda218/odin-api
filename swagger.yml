openapi: 3.0.3
info:
  title: Odin auth Apis
  contact:
    email: dan.chen@boardware.com
  version: 1.0.10
servers:
  - url: https://103.192.46.20:27002/v2
tags:
  - name: system
  - name: statistics
  - name: tenant
paths:
  /tenants:
    get:
      tags:
        - tenant
      summary: Get all tenants
      description: Get all tenants
      operationId: listTenants
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
    post:
      tags:
        - tenant
      summary: Get all tenants
      description: Get all tenants
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTenantRequest'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
  /tenants/{tenantId}:
    get:
      tags:
        - tenant
      summary: Get tenant by id
      description: Get tenant by id
      operationId: getTenantById
      parameters:
        - $ref: '#/components/parameters/tenantId'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
    put:
      tags:
        - tenant
      summary: Update tenant
      description: Update tenant
      operationId: updateTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTenantRequest'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
    delete:
      tags:
        - tenant
      summary: Delete tenant
      description: Delete tenant
      operationId: deleteTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
      responses:
        "204":
          description: successful operation
  /system/login:
    post:
      tags:
        - system
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
        "401":
          description: Invalid username/password supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /system/user:
    get:
      tags:
        - system
      summary: Get user info
      security:
        - bearerAuth: []
      description: Get user info
      operationId: getUser
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
    post:
      tags:
        - system
      summary: Create user
      security:
        - bearerAuth: []
      description: Create user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUser'
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
  /system/user/{userId}:
    get:
      tags:
        - system
      summary: Get user by id
      security:
        - bearerAuth: []
      description: Get user by id
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
    put:
      tags:
        - system
      summary: Update user
      security:
        - bearerAuth: []
      description: Update user
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUser'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
    delete:
      tags:
        - system
      summary: Delete user
      security:
        - bearerAuth: []
      description: Delete user
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        "204":
          description: successful operation
  /system/user/{userId}/info:
    get:
      tags:
        - system
      summary: Get user info by id
      security:
        - bearerAuth: []
      description: Get user info by id
      operationId: getUserInfoById
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUserInfo'
    put:
      tags:
        - system
      summary: Update user info
      security:
        - bearerAuth: []
      description: Update user info
      operationId: updateUserInfo
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUserInfo'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUserInfo'
  /statistics/device:
    get:
      tags:
        - statistics
      summary: Get device statistics
      security:
        - bearerAuth: []
      description: Get device statistics
      operationId: getDeviceStatistics
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceInfoList'
  /statistics/device/availability:
    get:
      tags:
        - statistics
      summary: Get device availability
      security:
        - bearerAuth: []
      description: Get device availability
      operationId: getDeviceAvailability
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAvailability'
  /statistics/device/inventories:
    get:
      tags:
        - statistics
      summary: Get inventory statistics
      security:
        - bearerAuth: []
      description: Get inventory statistics
      operationId: getInventoryStatistics
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemList'
  /statistics/alarms:
    get:
      tags:
        - statistics
      operationId: getProjectAlarms
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        "200":
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmInfoList'
  /statistics/alarms/trends:
    get:
      tags:
        - statistics
      operationId: getProjectAlarmTrends
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        "200":
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmsTrends'
  /statistics/billing:
    get:
      tags:
        - statistics
      operationId: getBillingStatistics
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        "200":
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bills'
components:
  schemas:
    Tenant:
      type: object
      properties:
        id:
          type: string
        englishName:
          type: string
        chineseName:
          type: string
        status:
          type: integer
          format: int64
        contact:
          type: string
        email:
          type: string
      required:
        - id
        - englishName
        - chineseName
        - status
        - contact
        - email
    UpsertTenantRequest:
      type: object
      properties:
        englishName:
          type: string
        chineseName:
          type: string
        status:
          type: integer
          format: int64
        contact:
          type: string
        email:
          type: string
      required:
        - englishName
        - chineseName
        - status
        - contact
        - email
    SystemUser:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        userType:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
      required:
        - id
        - username
        - email
        - userType
        - tenantId
        - projectId
    SystemUserInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        userType:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
      required:
        - id
        - name
        - email
        - userType
        - tenantId
        - projectId
    UserInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        userType:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
      required:
        - id
        - name
        - email
        - userType
    LoginRes:
      type: object
      properties:
        token:
          type: string
        userInfo:
          $ref: '#/components/schemas/UserInfo'
      required:
        - token
    LoginReq:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      required:
        - message
        - code
    DeviceCosts:
      type: object
      properties:
        name:
          type: string
        costs:
          type: number
          format: double
      required:
        - name
        - costs
    Bills:
      type: object
      properties:
        topFiveDevices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCosts'
        trend:
          type: array
          items:
            type: number
            format: double
    AlarmsTrends:
      type: object
      properties:
        sla1:
          type: integer
          format: int64
        sla2:
          type: integer
          format: int64
        sla3:
          type: integer
          format: int64
        sla4:
          type: integer
          format: int64
        trend:
          type: array
          items:
            type: integer
            format: int64
      required:
        - sla1
        - sla2
        - sla3
        - sla4
        - trend
    AlarmInfo:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        sla:
          type: string
        triggerTime:
          type: string
      required:
        - id
        - title
        - sla
        - triggerTime
    AlarmInfoList:
      type: array
      items:
        $ref: '#/components/schemas/AlarmInfo'
    InventoryItem:
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
      required:
        - name
        - value
    InventoryItemList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItem'
    DeviceInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceInfo'
    DeviceInfo:
      type: object
      properties:
        id:
          type: string
        deviceName:
          type: string
        deviceType:
          type: string
        status:
          type: integer
          format: int64
        location:
          type: integer
          format: int64
        brand:
          type: string
        projectName:
          type: string
        totalDownTime:
          type: integer
          format: int64
      required:
        - id
        - deviceName
        - deviceType
        - status
        - location
        - brand
        - projectName
        - totalDownTime
    DeviceAvailability:
      type: object
      properties:
        up:
          type: integer
          format: int64
        down:
          type: integer
          format: int64
        availability:
          type: number
          format: double
        totalDownTime:
          type: integer
          format: int64
      required:
        - up
        - down
        - availability
        - totalDownTime
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    tenantId:
      name: tenantId
      in: path
      required: true
      schema:
        type: string
    projectId:
      name: projectId
      in: query
      required: true
      schema:
        type: string
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT