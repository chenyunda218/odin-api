openapi: 3.0.3
info:
  title: Odin auth Apis
  contact:
    email: dan.chen@boardware.com
  version: 1.0.17
servers:
  - url: https://103.192.46.20:27002/v2
    description: UAT
  - url: http://localhost:8080
    description: 开发环境
tags:
  - name: system
  - name: statistics
  - name: tenant
  - name: project
  - name: account
paths:
  /projects:
    get:
      tags:
        - project
      summary: Get all projects
      description: Get all projects
      operationId: listProjects
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /tenants:
    get:
      tags:
        - tenant
      security:
        - BearerAuth: []
      summary: Get all tenants
      description: Get all tenants
      operationId: listTenants
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
    post:
      tags:
        - tenant
      summary: Get all tenants
      security:
        - BearerAuth: []
      description: Get all tenants
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTenantRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
  /tenants/{tenantId}:
    get:
      tags:
        - tenant
      summary: Get tenant by id
      description: Get tenant by id
      operationId: getTenantById
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/tenantId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
    put:
      tags:
        - tenant
      summary: Update tenant
      description: Update tenant
      operationId: updateTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTenantRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
    delete:
      tags:
        - tenant
      summary: Delete tenant
      description: Delete tenant
      operationId: deleteTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
      responses:
        '204':
          description: successful operation

  /tenants/{tenantId}/accounts:
    get:
      tags:
        - tenant
      summary: Get accounts
      description: Get accounts
      operationId: getAccounts
      parameters:
        - $ref: '#/components/parameters/tenantId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    post:
      tags:
        - tenant
      summary: Create account
      description: Create account
      operationId: createAccount
      parameters:
        - $ref: '#/components/parameters/tenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

  /tenants/account/{accountId}:
    put:
      tags:
        - tenant
      summary: Update account
      description: Update account
      operationId: updateAccount
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

    delete:
      tags:
        - tenant
      summary: Delete account
      description: Delete account
      operationId: deleteAccount
      parameters:
        - $ref: '#/components/parameters/accountId'

      responses:
        '204':
          description: successful operation

  /tenants/account/{accountId}/change-password:
    put:
      tags:
        - tenant
      summary: Change password
      description: Change password
      operationId: changePassword
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordReq'
      responses:
        '204':
          description: successful operation

  /tenants/{tenantId}/projects:
    get:
      tags:
        - tenant
      summary: Get projects
      description: Get projects
      operationId: getProjects
      parameters:
        - $ref: '#/components/parameters/tenantId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags:
        - tenant
      summary: Create project
      description: Create project
      operationId: createProject
      parameters:
        - $ref: '#/components/parameters/tenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertProjectReq'
      responses:
        '201': # created
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /tenants/projects/{projectId}:
    put:
      tags:
        - tenant
      summary: Update project
      description: Update project
      operationId: updateProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertProjectReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
        - tenant
      summary: Delete project
      description: Delete project
      operationId: deleteProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '204': # deleted
          description: successful operation

  /tenants/projects/{projectId}/contracts:
    get:
      tags:
        - tenant
      summary: Get contracts
      description: Get contracts
      operationId: getContracts
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
    post:
      tags:
        - tenant
      summary: Create contract
      description: Create contract
      operationId: createContract
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertContractReq'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'

  /tenants/projects/contracts/{contractId}:
    put:
      tags:
        - tenant
      summary: Update contract
      description: Update contract
      operationId: updateContract
      parameters:
        - $ref: '#/components/parameters/contractId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertContractReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'

    delete:
      tags:
        - tenant
      summary: Delete contract
      description: Delete contract
      operationId: deleteContract
      parameters:
        - $ref: '#/components/parameters/contractId'
      responses:
        '204':
          description: successful operation

  /tenants/projects/{projectId}/vm-prices:
    get:
      tags:
        - tenant
      summary: Get VM prices
      description: Get VM prices
      operationId: getVMPrices
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VMPrice'

    post:
      tags:
        - tenant
      summary: Create VM price
      description: Create VM price
      operationId: createVMPrice
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertVMPriceReq'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPrice'

  /tenants/projects/vm-prices/{vmPriceTableId}:
    put:
      tags:
        - tenant
      summary: Update VM price
      description: Update VM price
      operationId: updateVMPrice
      parameters:
        - $ref: '#/components/parameters/vmPriceTableId'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertVMPriceReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPrice'
    delete:
      tags:
        - tenant
      summary: Delete VM price
      description: Delete VM price
      operationId: deleteVMPrice
      parameters:
        - $ref: '#/components/parameters/vmPriceTableId'

      responses:
        '204':
          description: successful operation

  /tenants/projects/vm-prices/{vmPriceTableId}/record:
    put:
      tags:
        - tenant
      summary: Update VM price record
      description: Update VM price record
      operationId: updateVMPriceRecord
      parameters:
        - $ref: '#/components/parameters/vmPriceTableId'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMPrice'
      responses:
        '200':
          description: successful operation

  /tenants/projects/{projectId}/billing:
    post:
      tags:
        - tenant
      summary: Create billing
      description: Create billing
      operationId: createBilling
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billing'

  /tenants/projects/{projectId}/billing/download:
    post:
      tags:
        - tenant
      summary: Download billing
      description: Download billing
      operationId: downloadBilling
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingReq'
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /tenants/projects/{projectId}/whitelist:
    get:
      tags:
        - tenant
      summary: Get whitelist
      description: Get whitelist
      operationId: getWhitelist
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Whitelist'
    post:
      tags:
        - tenant
      summary: Add whitelist
      description: Add whitelist
      operationId: addWhitelist
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertWhitelistReq'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Whitelist'

  /tenants/projects/whitelist/{whitelistId}:
    put:
      tags:
        - tenant
      summary: Update whitelist
      description: Update whitelist
      operationId: updateWhitelist
      parameters:
        - $ref: '#/components/parameters/whitelistId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertWhitelistReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
    delete:
      tags:
        - tenant
      summary: Delete whitelist
      description: Delete whitelist
      operationId: deleteWhitelist
      parameters:
        - $ref: '#/components/parameters/whitelistId'
      responses:
        '204':
          description: successful operation

  /system/login:
    post:
      tags:
        - system
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
        '401':
          description: Invalid username/password supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /system/user:
    get:
      tags:
        - system
      summary: Get user info
      security:
        - BearerAuth: []
      description: Get user info
      operationId: getUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
    post:
      tags:
        - system
      summary: Create user
      security:
        - BearerAuth: []
      description: Create user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUser'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
  /system/user/{userId}:
    get:
      tags:
        - system
      summary: Get user by id
      security:
        - BearerAuth: []
      description: Get user by id
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
    put:
      tags:
        - system
      summary: Update user
      security:
        - BearerAuth: []
      description: Update user
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUser'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUser'
    delete:
      tags:
        - system
      summary: Delete user
      security:
        - BearerAuth: []
      description: Delete user
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '204':
          description: successful operation
  /system/user/{userId}/info:
    get:
      tags:
        - system
      summary: Get user info by id
      description: Get user info by id
      operationId: getUserInfoById
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUserInfo'
    put:
      tags:
        - system
      summary: Update user info
      description: Update user info
      operationId: updateUserInfo
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUserInfo'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUserInfo'
  /statistics/device:
    get:
      tags:
        - statistics
      summary: Get device statistics
      security:
        - BearerAuth: []
      description: Get device statistics
      operationId: getDeviceStatistics
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceInfoList'
  /statistics/device/availability:
    get:
      tags:
        - statistics
      summary: Get device availability
      security:
        - BearerAuth: []
      description: Get device availability
      operationId: getDeviceAvailability
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAvailability'
  /statistics/device/inventories:
    get:
      tags:
        - statistics
      summary: Get inventory statistics
      security:
        - BearerAuth: []
      description: Get inventory statistics
      operationId: getInventoryStatistics
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemList'
  /statistics/alarms:
    get:
      tags:
        - statistics
      operationId: getProjectAlarms
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmInfoList'
  /statistics/alarms/trends:
    get:
      tags:
        - statistics
      operationId: getProjectAlarmTrends
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmsTrends'
  /statistics/billing:
    get:
      tags:
        - statistics
      operationId: getBillingStatistics
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bills'
components:
  securitySchemes:
    # JWT Bearer 认证
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 需通过 /login 接口获取有效Token
  schemas:
    Tenant:
      type: object
      properties:
        id:
          type: string
        englishName:
          type: string
        chineseName:
          type: string
        status:
          type: integer
          format: int64
        contact:
          type: string
        email:
          type: string
      required:
        - id
        - englishName
        - chineseName
        - status
        - contact
        - email
    UpsertTenantRequest:
      type: object
      properties:
        englishName:
          type: string
        chineseName:
          type: string
        status:
          type: integer
          format: int64
        contact:
          type: string
        email:
          type: string
      required:
        - englishName
        - chineseName
        - status
        - contact
        - email

    Account:
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
        email:
          type: string
        roleName:
          type: string
        roleId:
          type: string
        username:
          type: string
        password:
          type: string
        salt:
          type: string
        accountType:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string

      required:
        - id
        - tenantId
        - projectId
        - email
        - roleName
        - roleId
        - username
        - password
        - salt
        - accountType
        - createdAt
        - updatedAt

    AccountRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        roleId:
          type: string
        projectId:
          type: string
      required:
        - username
        - password
        - email
        - roleId
        - projectId

    ChangePasswordReq:
      type: object
      properties:
        newPassword:
          type: string
      required:
        - newPassword
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        tenantId:
          type: string
        priceTableId:
          type: string
        status:
          type: integer
        msId:
          type: string
        contractIds:
          type: string
        contractList:
          type: array
          items:
            type: string
        contractNames:
          type: array
          items:
            type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - name
        - code
        - tenantId
        - priceTableId
        - status
        - msId
        - contractList
        - contractNames
        - createdAt
        - updatedAt

    UpsertProjectReq:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        priceTableId:
          type: string
        status:
          type: integer
        msId:
          type: string
    Contract:
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        msId:
          type: string
        PoOrSoList:
          type: array
          items:
            type: string
        projectId:
          type: string
        ProjectName:
          type: string
        status:
          type: integer
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time

    UpsertContractReq:
      type: object
      properties:
        msId:
          type: string
        PoOrSoList:
          type: array
          items:
            type: string

        status:
          type: integer
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time

    VMPrice:
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
        specList:
          type: array
          items:
            $ref: '#/components/schemas/VmSpecPrice'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    VmSpecPrice:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        spec:
          type: array
          items:
            $ref: '#/components/schemas/VmSpec'
        price:
          type: number
        extraStoragePrice:
          type: number

    VmSpec:
      type: object
      properties:
        cpu:
          type: integer
        memory:
          type: integer
        storage:
          type: integer

    UpsertVMPriceReq:
      type: object
      properties:
        name:
          type: string
        specList:
          type: array
          items:
            $ref: '#/components/schemas/VmSpecPrice'
    BillingReq:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string

    Billing:
      type: object
      properties:
        hostname:
          type: string
        uuid:
          type: string
        vCPUs:
          type: integer
        memory:
          type: integer
        osName:
          type: string
        location:
          type: string
        datacenter:
          type: string
        datacenterId:
          type: string
        clusterId:
          type: string
        storage:
          type: integer
        specName:
          type: string
        specPrice:
          type: number
        baseFeePerHour:
          type: number
        status:
          type: string
        hours:
          type: integer
        extraStorage:
          type: integer
        extraStoragePrice:
          type: number
        extraFee:
          type: number
        totalPrice:
          type: number
        period:
          type: string
        completedAt:
          type: string
          format: date-time

    Whitelist:
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        msId:
          type: string
        projectId:
          type: string
        hostName:
          type: string
        uuid:
          type: string
        cpus:
          type: integer
        memory:
          type: integer
        storage:
          type: integer
        owner:
          type: string
        department:
          type: string
        type:
          type: string
        status:
          type: boolean

    UpsertWhitelistReq:
      type: object
      properties:
        hostName:
          type: string
        uuid:
          type: string
        type:
          type: string
        status:
          type: boolean
        owner:
          type: string
        department:
          type: string

    SystemUser:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        userType:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
      required:
        - id
        - username
        - email
        - userType
        - tenantId
        - projectId
    SystemUserInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        userType:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
      required:
        - id
        - name
        - email
        - userType
        - tenantId
        - projectId
    UserInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        userType:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
      required:
        - id
        - name
        - email
        - userType
    LoginRes:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/SystemUser'
        userInfo:
          $ref: '#/components/schemas/UserInfo'
      required:
        - token
    LoginReq:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      required:
        - message
        - code
    DeviceCosts:
      type: object
      properties:
        name:
          type: string
        costs:
          type: number
          format: double
      required:
        - name
        - costs
    Bills:
      type: object
      properties:
        topFiveDevices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCosts'
        trend:
          type: array
          items:
            type: number
            format: double
    AlarmsTrends:
      type: object
      properties:
        sla1:
          type: integer
          format: int64
        sla2:
          type: integer
          format: int64
        sla3:
          type: integer
          format: int64
        sla4:
          type: integer
          format: int64
        trend:
          type: array
          items:
            type: integer
            format: int64
      required:
        - sla1
        - sla2
        - sla3
        - sla4
        - trend
    AlarmInfo:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        sla:
          type: string
        triggerTime:
          type: string
      required:
        - id
        - title
        - sla
        - triggerTime
    AlarmInfoList:
      type: array
      items:
        $ref: '#/components/schemas/AlarmInfo'
    InventoryItem:
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
      required:
        - name
        - value
    InventoryItemList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItem'
    DeviceInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceInfo'
    DeviceInfo:
      type: object
      properties:
        id:
          type: string
        deviceName:
          type: string
        deviceType:
          type: string
        status:
          type: integer
          format: int64
        location:
          type: integer
          format: int64
        brand:
          type: string
        projectName:
          type: string
        totalDownTime:
          type: integer
          format: int64
      required:
        - id
        - deviceName
        - deviceType
        - status
        - location
        - brand
        - projectName
        - totalDownTime
    DeviceAvailability:
      type: object
      properties:
        up:
          type: integer
          format: int64
        down:
          type: integer
          format: int64
        availability:
          type: number
          format: double
        totalDownTime:
          type: integer
          format: int64
      required:
        - up
        - down
        - availability
        - totalDownTime
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    tenantId:
      name: tenantId
      in: path
      required: true
      schema:
        type: string
    projectId:
      name: projectId
      in: path
      required: true
      schema:
        type: string
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
    accountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
    contractId:
      name: contractId
      in: path
      required: true
      schema:
        type: string
    vmPriceTableId:
      name: vmPriceTableId
      in: path
      required: true
      schema:
        type: string
    whitelistId:
      name: whitelistId
      in: path
      required: true
      schema:
        type: string
    entranceId:
      name: entranceId
      in: path
      required: true
      schema:
        type: string
    channelId:
      name: channelId
      in: path
      required: true
      schema:
        type: string
    notificationId:
      name: notificationId
      in: path
      required: true
      schema:
        type: string
